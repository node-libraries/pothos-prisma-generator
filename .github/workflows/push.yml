name: "Deployment Workflow"
on:
  push:
jobs:
  CleanupRuns:
    runs-on: ubuntu-latest
    steps:
      - uses: rokroskar/workflow-run-cleanup-action@master
        continue-on-error: true
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  Modules:
    name: Modules
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - run: npm -g install pnpm
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Cache node modules
        id: cache
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          lookup-only: true
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pnpm install --frozen-lockfile

  Lint:
    name: Lint
    needs: Modules
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - run: npm -g install pnpm @eslint/js
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run lint
        run: npm run lint

  Build:
    name: Build
    needs: Modules
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - run: npm -g install pnpm
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run build
        run: npm run --prefix packages/pothos-prisma-generator build

  BackendTest:
    name: Backend Test
    needs:
      - Modules
      - Build
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v4
      - run: npm -g install pnpm
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Initialize DB
        run: npm run --prefix packages/test test:reset
      - name: Run build
        run: npm run --prefix packages/pothos-prisma-generator build
      - name: Test
        run: npm run --prefix packages/test test
